/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.Utils;
import control.Utils.SignOperator;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.DbConfigs;
import model.User;

/**
 *
 * @author dotnet2
 */
public class DbConfigsPage extends javax.swing.JFrame {

	/**
	 * Creates new form DbConfigsPage
	 */
	DbConfigs configs;

	public DbConfigsPage() {
		initComponents();
		setLocation(getToolkit().getScreenSize().width / 4, getToolkit().getScreenSize().height / 4);

	}

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;
	User user = null;

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel_portnum = new javax.swing.JLabel();
		jTextField_port_num = new javax.swing.JTextField();
		jLabel_host = new javax.swing.JLabel();
		jTextField_host = new javax.swing.JTextField();
		jLabel_service_name = new javax.swing.JLabel();
		jTextField_username = new javax.swing.JTextField();
		jTextField_service_name = new javax.swing.JTextField();
		jLabel_username = new javax.swing.JLabel();
		jLabel_password = new javax.swing.JLabel();
		jButton_ok = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		jButton_cancel = new javax.swing.JButton();
		jPasswordField = new javax.swing.JPasswordField();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Db configurations");

		jLabel_portnum.setText("Port Num.");

		jTextField_port_num.setToolTipText("port number");

		jLabel_host.setText("Host");

		jTextField_host.setToolTipText("host address");

		jLabel_service_name.setText("Service Name");

		jTextField_username.setToolTipText("username");

		jTextField_service_name.setToolTipText("service name (db name)");

		jLabel_username.setText("Username");

		jLabel_password.setText("password");

		jButton_ok.setText("OK");
		jButton_ok.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton_okActionPerformed(evt);
			}
		});

		jLabel1.setText("Database configrations:");

		jButton_cancel.setText("Cancel");
		jButton_cancel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton_cancelActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(25, 25, 25).addComponent(jLabel1)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addGroup(layout.createSequentialGroup().addGap(61, 61, 61)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel_portnum).addComponent(jLabel_host)
								.addComponent(jLabel_service_name).addComponent(jLabel_username)
								.addComponent(jLabel_password))
						.addGap(14, 14, 14)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
										.addComponent(jButton_ok).addGap(18, 18, 18).addComponent(jButton_cancel)
										.addGap(37, 37, 37))
								.addComponent(jTextField_username, javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jTextField_port_num, javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jTextField_host, javax.swing.GroupLayout.Alignment.LEADING,
										javax.swing.GroupLayout.PREFERRED_SIZE, 200,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jTextField_service_name).addComponent(jPasswordField))
						.addGap(60, 60, 60)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(30, 30, 30).addComponent(jLabel1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jTextField_port_num, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel_portnum))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jTextField_host, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel_host))
						.addGap(20, 20, 20)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jTextField_service_name, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel_service_name))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jTextField_username, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel_username))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel_password).addComponent(jPasswordField,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jButton_ok).addComponent(jButton_cancel))
						.addGap(24, 24, 24)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	@SuppressWarnings("deprecation")
	private void jButton_okActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton_okActionPerformed

		new Thread(new Runnable() {

			@Override
			public void run() {
				jButton_ok.setText(Messages.getString("DbConfigsPage.loading_btn")); //$NON-NLS-1$
				revalidate();
				repaint();
			}
		}).start();
		Utils utils = new Utils();

		if (utils.isHost(jTextField_host.getText()) && Utils.isNum(jTextField_port_num.getText())
				&& !Utils.containSpaces(jTextField_service_name.getText())
				&& !Utils.containSpaces(jTextField_username.getText())) {

			configs = new DbConfigs();

			configs.setHOST(jTextField_host.getText());
			configs.setPORT_NUM(jTextField_port_num.getText());
			configs.setSERVICE_NAME(jTextField_service_name.getText());
			configs.setUSER_NAME(jTextField_username.getText());
			configs.setPASSWORD(jPasswordField.getText());
			configs.configDB_URL();

			boolean dbconn = configs.testDbConnection();
            if (dbconn) {
                dbmanager.DbManager.dbConfigs = configs;

                Thread thread = new Thread(() -> {
                    configs.syncTables();
                    notify();
                });
                thread.start();
                synchronized (thread) {
                    try {
                        Utils.showCongrats(Messages.getString("DbConfigsPage.loading_msg")); //$NON-NLS-1$
                        thread.wait();
                        this.setDone(true);
                        this.dispose();
                    } catch (InterruptedException e) {
                        System.err.print(e.getMessage());
                    }
                }
            } else {
				Utils.showError(Messages.getString("DbConfigsPage.wrong_config_info_msg")); //$NON-NLS-1$
			}

		} else {
			// re-enter data correctly!
			showError();
			/*
			 * JOptionPane.showMessageDialog(new JTextField(),
			 * "wrong configuration info! further versions will be more specific error message"
			 * , "Error", (Integer) 0);
			 */
		}

	}// GEN-LAST:event_jButton_okActionPerformed

	private void jButton_cancelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton_cancelActionPerformed
		this.dispose();
	}// GEN-LAST:event_jButton_cancelActionPerformed

	public DbConfigs getConfigs() {
		return configs;
	}

	public void setConfigs(DbConfigs configs) {
		this.configs = configs;
	}

	public boolean isDone() {
		return done;
	}

	public void setDone(boolean done) {
		this.done = done;
	}

	@SuppressWarnings("deprecation")
	private void showError() {
		Utils utils = new Utils();

		if (!utils.isHost(jTextField_host.getText())) {
			JOptionPane.showMessageDialog(new JTextField(), Messages.getString("DbConfigsPage.wrong_host_err"), //$NON-NLS-1$
					Messages.getString("DbConfigsPage.error_label"), //$NON-NLS-1$
					(Integer) 0);
		} else if (!Utils.isNum(jTextField_port_num.getText())) {
			JOptionPane.showMessageDialog(new JTextField(), Messages.getString("DbConfigsPage.wrong_port_num_msg"), //$NON-NLS-1$
					Messages.getString("DbConfigsPage.error_label"), //$NON-NLS-1$
					(Integer) 0);
		} else if (Utils.containSpaces(jTextField_service_name.getText())) {
			JOptionPane.showMessageDialog(new JTextField(), Messages.getString("DbConfigsPage.wrong_service_name_err"), //$NON-NLS-1$
					Messages.getString("DbConfigsPage.error_label"), (Integer) 0); //$NON-NLS-1$
		} else if (!Utils.checkLength(jPasswordField.getText(), utils.PASSWORD_LENGTH, SignOperator.BIGGER)) {
			JOptionPane.showMessageDialog(new JTextField(), Messages.getString("DbConfigsPage.wrong_password"), //$NON-NLS-1$
					Messages.getString("DbConfigsPage.error_label"), //$NON-NLS-1$
					(Integer) 0);
		} else if (Utils.containSpaces(jTextField_username.getText())) {
			JOptionPane.showMessageDialog(new JTextField(), Messages.getString("DbConfigsPage.wrong_username_err"), //$NON-NLS-1$
					Messages.getString("DbConfigsPage.error_label"), (Integer) 0); //$NON-NLS-1$
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton_cancel;
	private javax.swing.JButton jButton_ok;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel_host;
	private javax.swing.JLabel jLabel_password;
	private javax.swing.JLabel jLabel_portnum;
	private javax.swing.JLabel jLabel_service_name;
	private javax.swing.JLabel jLabel_username;
	private javax.swing.JPasswordField jPasswordField;
	private javax.swing.JTextField jTextField_host;
	private javax.swing.JTextField jTextField_port_num;
	private javax.swing.JTextField jTextField_service_name;
	private javax.swing.JTextField jTextField_username;
	// End of variables declaration//GEN-END:variables

	public javax.swing.JCheckBox jCheckBox_delete_permission;
	public javax.swing.JCheckBox jCheckBox_insert_permission;
	public javax.swing.JCheckBox jCheckBox_search_permission;
	public javax.swing.JCheckBox jCheckBox_update_permission;
	private boolean done = false;

}
